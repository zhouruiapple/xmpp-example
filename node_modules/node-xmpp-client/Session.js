'use strict'

function Session (from, to, lang) {
  this.from = from
  this.to = to
  this.lang = lang
}

Session.prototype.initiate = function () {
  `<stream:stream
     from='juliet@im.example.com'
     to='im.example.com'
     version='1.0'
     xml:lang='en'
     xmlns='jabber:client'
     xmlns:stream='http://etherx.jabber.org/streams'>`
}

Session.prototype.handleStreamElement = function (el) {
  if (el.from !== this.to)
   // error
  else if (el.to !== this.from)
  // error
  this.emit('stream-open', el)
}

/**
 * https://xmpp.org/rfcs/rfc6120.html#streams-negotiation-features
 * @param  {[type]} el [description]
 * @return {[type]}    [description]
 */
Session.prototype.handleStreamFeatures = function (el) {
  // non exhaustive list of possible features
  // Resource Binding
  //   <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/>
  //   https://xmpp.org/rfcs/rfc6120.html#bind
  // STARTTLS Negotiation
  //   <starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'>
  //     <required/>
  //   </starttls>
  //   https://xmpp.org/rfcs/rfc6120.html#tls
  // SASL Negotiation
  //   <mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'>
  //     <mechanism>...</mechanism>
  //     ...
  //   </mechanisms>
  //   https://xmpp.org/rfcs/rfc6120.html#sasl
  //
  // In-Band Registration
  //   <register xmlns='http://jabber.org/features/iq-register'/>
  //   https://xmpp.org/extensions/xep-0077.html
  // Stream Management
  //   <sm xmlns='urn:xmpp:sm:3'/>
  //   https://xmpp.org/extensions/xep-0198.html
  // Stream Compression
  //   <compression xmlns='http://jabber.org/features/compress'>
  //     <method>...</method>
  //     ...
  //   </compression>
  //   https://xmpp.org/extensions/xep-0138.html
  //   https://xmpp.org/extensions/xep-0229.html LZW
  //   https://xmpp.org/extensions/xep-0322.html EXI
  // Client State Indication
  //   <csi xmlns='urn:xmpp:csi:0'/>
  //   https://xmpp.org/extensions/xep-0352.html
  this.emit('stream:features', el)
}

Session.prototype.handleElement = function (el) {
  if (el.name === 'stream:stream') {
    this.handleStreamOpen(el)
  }
  else if (el.name === 'stream:features') {
    this.handleStreamFeatures(el)
  }
}
